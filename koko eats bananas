class Solution {
     public static int findMax(int[] piles) {
        int maxi = Integer.MIN_VALUE;;
        int n = piles.length;
        //find the maximum:
        for (int i = 0; i < n; i++) {
            maxi = Math.max(maxi, piles[i]);
        }
        return maxi;
    }
    public int Totalhrs(int []piles , int h){
        int totalHrs= 0;
        for(int i=0 ; i<piles.length ; i++){
            totalHrs +=Math.ceil((double)(piles[i])/(double)(h));
        }
        return totalHrs;
    }
    public int minEatingSpeed(int[] piles, int h) {
        int n =piles.length;

        int l=1;
        int hi= findMax(piles);
       
        while(l<=hi){
            int mid= (l+hi)/2;
           int hrs= Totalhrs(piles , mid);
            if(hrs<=h){
               
                hi= mid-1;
            }
          else  l= mid+1;
        }
            return l;
    }

    
}
